[alias]

    a   = commit --amend
    br  = branch
    c   = commit
    ca  = !git add -A && git commit                 # Commit all changes
    co  = checkout
    cp  = cherry-pick
    d   = diff
    dc  = diff --cached
    g   = log --graph --pretty=custom               # Show custom graph
    l   = log --pretty=custom                       # Show custom log
    lc  = shortlog --summary --numbered             # List contributors
    rlc = !git reset --hard HEAD~1                  # Remove last commit
    st  = status
    ulc = reset --soft HEAD~1                       # Undo last commit

    # Credit an author on the latest commit
    credit = "!f() { \
        if [ -n \"$1\" ] && [ -n \"$2\" ]; then \
            git commit --amend --author \"$1 <$2>\" -C HEAD; \
        fi \
    }; f"

    # Merge GitHub pull request on top of the `master` branch
    mpr = "!f() { \
        if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
            git fetch origin refs/pull/$1/head:pr/$1 && \
            git rebase master pr/$1 && \
            git checkout master && \
            git merge pr/$1 && \
            git branch -D pr/$1 && \
            git commit --amend -m \"$(git log -1 --pretty=%B)\n\nClose #$1\"; \
        fi \
    }; f"

[color "branch"]
    current = green bold
    local = green
    remote = yellow

[color "diff"]
    frag = magenta
    meta = yellow
    new = green
    old = red

[color "status"]
    added = green reverse
    changed = yellow reverse
    untracked = red reverse

[core]
    attributesfile = ~/.gitattributes
    autocrlf = input
    editor = vim
    excludesfile = ~/.gitignore

[pretty]
    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │             └─ author name
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)

[push]
    # Make `git push` automatically push relevant
    # annotated tags when pushing branches out.
    followTags = true

[include]
    path = ~/.gitconfig.local

# This is Git's per-user configuration file.
[user]
# Please adapt and uncomment the following lines:
	name = kboygit
	email = heybisayangdako@gmail.com

[credential]
	helper = osxkeychain

[core]
	excludesfile = /Users/kirbyjames/.gitignore_global

[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =

[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[color]
	#diff = auto
	#status = auto
	#branch = auto
	#interactive = auto
	ui = auto

	[alias]
	        grok = log --graph --abbrev-commit --decorate=full --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)\"
